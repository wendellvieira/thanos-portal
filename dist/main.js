!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n);var r=function(e){return new Promise((n,t)=>{e.Clock=null,e.SmokeParticles=[],e.PortalParticles=[],e.Scene=new THREE.Scene,function(e){let n=new THREE.DirectionalLight(16777215,.5);n.position.set(0,0,1),e.add(n)}(e.Scene),function(e){let n=new THREE.PointLight(404873,30,350,1.7);n.position.set(0,0,250),e.Scene.add(n),e.PortalLight=n}(e),function(e){let n=new THREE.PerspectiveCamera(80,window.innerWidth/window.innerHeight,1,1e4);n.position.z=1e3,e.Scene.add(n),e.Camera=n}(e),function(e){let n=new THREE.WebGLRenderer;n.setClearColor(0,1),n.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(n.domElement),e.render=(()=>n.render(e.Scene,e.Camera))}(e),n()})},o=function(e){return new Promise((n,t)=>{(new THREE.TextureLoader).load("statics/images/smoke.png",async function(t){await function(e,n){return new Promise((t,r)=>{const o=new THREE.PlaneBufferGeometry(350,350),a=new THREE.MeshStandardMaterial({map:e,transparent:!0});for(let e=880;e>250;e--){let t=new THREE.Mesh(o,a);t.position.set(.5*e*Math.cos(4*e*Math.PI/180),.5*e*Math.sin(4*e*Math.PI/180),.1*e),t.rotation.z=360*Math.random(),n.PortalParticles.push(t),n.Scene.add(t)}t()})}(t,e),await function(e,n){return new Promise((t,r)=>{const o=new THREE.PlaneBufferGeometry(1e3,1e3),a=new THREE.MeshStandardMaterial({map:e,transparent:!0});for(let e=0;e<40;e++){let e=new THREE.Mesh(o,a);e.position.set(1e3*Math.random()-500,500*Math.random()-200,25),e.rotation.z=360*Math.random(),e.material.opacity=.4,n.SmokeParticles.push(e),n.Scene.add(e)}t()})}(t,e),e.Clock=new THREE.Clock,n()})})},a=function(e,n){return new Promise((t,r)=>{e.forEach(e=>{e.rotation.z-=1.5*n}),t()})},i=function(e,n){return new Promise((t,r)=>{e.forEach(e=>{e.rotation.z-=.2*n}),t()})};!async function(){const e={};await r(e),await o(e),async function e(n){const t=n.Clock.getDelta();await a(n.PortalParticles,t),await i(n.SmokeParticles,t),Math.random()>.9&&(n.PortalLight.power=350+500*Math.random()),n.render(),requestAnimationFrame(()=>e(n))}(e)}()}]);